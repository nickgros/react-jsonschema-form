"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[748],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(r),u=a,f=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8363:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={},i="Objects",p={unversionedId:"usage/objects",id:"usage/objects",title:"Objects",description:"Object properties",source:"@site/docs/usage/objects.md",sourceDirName:"usage",slug:"/usage/objects",permalink:"/react-jsonschema-form/docs/usage/objects",draft:!1,editUrl:"https://github.com/rjsf-team/react-jsonschema-form/tree/main/packages/docs/docs/usage/objects.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Single fields",permalink:"/react-jsonschema-form/docs/usage/single"},next:{title:"Arrays",permalink:"/react-jsonschema-form/docs/usage/arrays"}},s={},l=[{value:"Object properties",id:"object-properties",level:2},{value:"Required properties",id:"required-properties",level:2},{value:"Specifying property order",id:"specifying-property-order",level:2},{value:"Additional properties",id:"additional-properties",level:2},{value:"<code>expandable</code> option",id:"expandable-option",level:3}],c={toc:l};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"objects"},"Objects"),(0,a.kt)("h2",{id:"object-properties"},"Object properties"),(0,a.kt)("p",null,"Objects are defined with a type equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"object")," and properties specified in the ",(0,a.kt)("inlineCode",{parentName:"p"},"properties")," keyword."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { RJSFSchema } from "@rjsf/utils";\nimport validator from "@rjsf/validator-ajv8";\n\nconst schema: RJSFSchema = {\n  "title": "My title",\n  "description": "My description",\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string"\n    },\n    "age": {\n      "type": "number"\n    }\n  }\n};\n\nrender((\n  <Form schema={schema} validator={validator} />\n), document.getElementById("app"));\n')),(0,a.kt)("h2",{id:"required-properties"},"Required properties"),(0,a.kt)("p",null,"You can specify which properties are required using the ",(0,a.kt)("inlineCode",{parentName:"p"},"required")," attribute:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { RJSFSchema } from "@rjsf/utils";\nimport validator from "@rjsf/validator-ajv8";\n\nconst schema: RJSFSchema = {\n  "title": "My title",\n  "description": "My description",\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string"\n    },\n    "age": {\n      "type": "number"\n    }\n  },\n  "required": ["name"]\n};\n\nrender((\n  <Form schema={schema} validator={validator} />\n), document.getElementById("app"));\n')),(0,a.kt)("h2",{id:"specifying-property-order"},"Specifying property order"),(0,a.kt)("p",null,"Since the order of object properties in Javascript and JSON is not guaranteed, the ",(0,a.kt)("inlineCode",{parentName:"p"},"uiSchema")," object spec allows you to define the order in which properties are rendered using the ",(0,a.kt)("inlineCode",{parentName:"p"},"ui:order")," property:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { RJSFSchema, UiSchema } from "@rjsf/utils";\nimport validator from "@rjsf/validator-ajv8";\n\nconst schema: RJSFSchema = {\n  type: "object",\n  properties: {\n    foo: {type: "string"},\n    bar: {type: "string"}\n  }\n};\n\nconst uiSchema: UiSchema = {\n  "ui:order": ["bar", "foo"]\n};\n\nrender((\n  <Form schema={schema} uiSchema={uiSchema} validator={validator} />\n), document.getElementById("app"));\n')),(0,a.kt)("p",null,"If a guaranteed fixed order is only important for some fields, you can insert a wildcard ",(0,a.kt)("inlineCode",{parentName:"p"},'"*"')," item in your ",(0,a.kt)("inlineCode",{parentName:"p"},"ui:order")," definition. All fields that are not referenced explicitly anywhere in the list will be rendered at that point:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { UiSchema } from "@rjsf/utils";\n\nconst uiSchema: UiSchema = {\n  "ui:order": ["bar", "*"]\n};\n')),(0,a.kt)("h2",{id:"additional-properties"},"Additional properties"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"additionalProperties")," keyword allows the user to add properties with arbitrary key names. Set this keyword equal to a schema object:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { RJSFSchema } from "@rjsf/utils";\nimport validator from "@rjsf/validator-ajv8";\n\nconst schema: RJSFSchema = {\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string"\n    }\n  },\n  "additionalProperties": {\n    "type": "number",\n    "enum": [1, 2, 3]\n  }\n};\n\nrender((\n  <Form schema={schema} validator={validator} />\n), document.getElementById("app"));\n')),(0,a.kt)("p",null,"In this way, an add button for new properties is shown by default."),(0,a.kt)("p",null,"You can also define ",(0,a.kt)("inlineCode",{parentName:"p"},"uiSchema")," options for ",(0,a.kt)("inlineCode",{parentName:"p"},"additionalProperties")," by setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"additionalProperties")," attribute in the ",(0,a.kt)("inlineCode",{parentName:"p"},"uiSchema"),"."),(0,a.kt)("h3",{id:"expandable-option"},(0,a.kt)("inlineCode",{parentName:"h3"},"expandable")," option"),(0,a.kt)("p",null,"You can turn support for ",(0,a.kt)("inlineCode",{parentName:"p"},"additionalProperties")," off with the ",(0,a.kt)("inlineCode",{parentName:"p"},"expandable")," option in ",(0,a.kt)("inlineCode",{parentName:"p"},"uiSchema"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { UiSchema } from "@rjsf/utils";\n\nconst uiSchema: UiSchema = {\n  "ui:options":  {\n    expandable: false\n  }\n};\n')))}d.isMDXComponent=!0}}]);