name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v2
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint
      - run: pnpm cs-check
      - name: Build with Netlify badge
        if: github.ref != 'refs/heads/main' && matrix.node-version != '14.x'
        run: pnpm build
        env:
          VITE_SHOW_NETLIFY_BADGE: true
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Build
        if: github.ref == 'refs/heads/main' && matrix.node-version != '14.x'
        run: pnpm build
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      # Docusaurus doesn't support Node 14. These tasks can be removed once Node 14 is EOL (May 2023)
      - name: Build with Netlify badge (no docs)
        if: github.ref != 'refs/heads/main' && matrix.node-version == '14.x'
        run: npx nx run-many --target=build --exclude=docs
        env:
          VITE_SHOW_NETLIFY_BADGE: true
          NODE_OPTIONS: --max_old_space_size=4096
      - name: Build (no docs)
        if: github.ref == 'refs/heads/main' && matrix.node-version == '14.x'
        run: npx nx run-many --target=build --exclude=docs
        env:
          NODE_OPTIONS: --max_old_space_size=4096

      - if: matrix.node-version == '18.x'
        uses: actions/upload-artifact@v3
        with:
          name: playground
          path: packages/playground/dist
      - if: matrix.node-version == '18.x'
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: packages/docs/build
      - run: pnpm test
  deploy_playground_and_docs:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    name: Deploy playground and docs to GitHub Pages
    needs: [build]
    steps:
      - name: Download built playground
        uses: actions/download-artifact@v3
        with:
          name: playground
          path: dist
      - name: Download built docs
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: dist/docs
      - name: Deploy playground + docs to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          keep_history: true
          target_branch: gh-pages
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
